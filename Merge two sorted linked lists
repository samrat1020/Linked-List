/*
Given two sorted linked lists consisting of N and M nodes respectively. 
The task is to merge both of the list (in-place) and return head of the merged list.

Note: It is strongly recommended to do merging in-place using O(1) extra space.
*/

Node* sortedMerge(Node* head1,   Node* head2)
{
    Node *head = NULL;
    Node *h = NULL;
    Node *temp = NULL;
    while(head1 != NULL && head2 != NULL) {
        if(head1->data < head2->data) {
            temp = head1;
            head1 = head1->next;
            temp->next = NULL;
        } else {
            temp = head2;
            head2 = head2->next;
            temp->next = NULL;
        }
        if(head == NULL) {
            head = temp;
            h = head;
        } else {
            head->next = temp;
            head = head->next;
        }
    }
    
    if(head1 != NULL) {
        if(h == NULL) {
            return head1;
        }
        head->next = head1;
        head1 = NULL;
    }
    if(head2 != NULL) {
        if(h == NULL) {
            return head2;
        }
        head->next = head2;
        head2 = NULL;
    }
    
    return h;
    
}
